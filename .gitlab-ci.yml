include:
- project: 'subugoe/argo-cd-workflow'
  file:
    # trigger downstream cross-project pipeline to update the helm chart; triggered on pushing a new tag
    - 'ci-templates/trigger-downstream-pipeline.yml'


# prevent included job from running unconfigured
trigger-downstream-pipeline:
  rules:
    - when: never

variables:
  imageTag: ${CI_COMMIT_REF_NAME}-${CI_COMMIT_SHORT_SHA}
  harborPath: "sub-fe/digis"
  dest: "harbor.gwdg.de/${harborPath}/${CI_PROJECT_NAME}"

.dev-rules:
  rules:
    - if: $CI_COMMIT_BRANCH == "develop"
    - if: $CI_COMMIT_TAG
      when: never

.staging-rules:
  rules:
    - if: $CI_COMMIT_TAG

.kaniko_template: &kaniko
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  before_script:
    # add docker credentials
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"harbor.gwdg.de\":{\"auth\":\"$(printf "%s:%s" "robot\$sub-fe+sub-fe-digis" "${DIGIS_HARBOR_ROBOT_TOKEN}" | base64 | tr -d '\n')\"}}}" > /kaniko/.docker/config.json
  script:
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}" 
      --dockerfile "${CI_PROJECT_DIR}/Dockerfile"
      --build-arg build_date=$(date -u +'%Y-%m-%dT%H:%M:%SZ')
      --build-arg vcs_ref=${CI_COMMIT_SHORT_SHA}
      --destination ${dest}

build_image_dev:
  <<: *kaniko
  script:
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}" 
      --dockerfile "${CI_PROJECT_DIR}/Dockerfile"
      --build-arg build_date=$(date -u +'%Y-%m-%dT%H:%M:%SZ')
      --build-arg vcs_ref=${CI_COMMIT_SHORT_SHA}
      --reproducible
      --destination ${dest}:${imageTag}
      --destination ${dest}:latest
  rules:
    - !reference [.dev-rules, rules]

# Override variables and rules for included trigger job
trigger-downstream-pipeline-dev:
  extends: trigger-downstream-pipeline
  inherit:
    variables:
      - imageTag
  variables:
    REFERENCED_IMAGE: ${imageTag}
    FILE_PATH: envs/values-dev.yaml
    UPDATE_KEY: .image.tag
    REPOSITORY_PATH: fe/digis/websearch_helm
  rules:
    - !reference [.dev-rules, rules]

build_image_staging:
  <<: *kaniko
  script:
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}" 
      --dockerfile "${CI_PROJECT_DIR}/Dockerfile"
      --build-arg build_date=$(date -u +'%Y-%m-%dT%H:%M:%SZ')
      --build-arg vcs_ref=${CI_COMMIT_SHORT_SHA}
      -- reproducible
      --destination ${dest}:${CI_COMMIT_TAG}
  rules:
    - !reference [.staging-rules, rules]

# Override variables and rules for included trigger job
trigger-downstream-pipeline-staging:
  extends: trigger-downstream-pipeline
  variables:
    REFERENCED_IMAGE: ${CI_COMMIT_TAG}
    FILE_PATH: envs/values-staging.yaml
    UPDATE_KEY: .image.tag
    REPOSITORY_PATH: fe/digis/websearch_helm
  rules:
    - !reference [.staging-rules, rules]

# this stage creates a new environment for the current branch.
pages:
  image: node:16-alpine3.17
  script:
    - node -v
    - npm ci
    - echo 'NUXT_APP_BASE_URL=/georoc-frontend/${CI_COMMIT_REF_SLUG}/' >> .env
    - npm run generate
    - mkdir --parents public/${CI_COMMIT_REF_SLUG}
    - cp --recursive .output/public/* public/${CI_COMMIT_REF_SLUG}/

  environment:
    name: ${CI_COMMIT_REF_SLUG}
    url: https://subugoe.pages.gwdg.de/georoc-frontend/${CI_COMMIT_REF_SLUG}/
  artifacts:
    name: "$CI_COMMIT_REF_SLUG"
    paths:
      - public


# TODO: Find workflow for prod
#build_liveimage:
#  <<: *kaniko
#  # we just add the “live” tag here…
#  script:
#    - /kaniko/executor
#      --context .
#      --dockerfile ./Dockerfile
#      --build-arg build_date=$(date -u +'%Y-%m-%dT%H:%M:%SZ')
#      --build-arg vcs_ref=${CI_COMMIT_SHORT_SHA}
#      --destination ${IMAGE_TAG}
#      --destination $CI_REGISTRY:live
#  rules:
#    - if: $CI_COMMIT_TAG
#
